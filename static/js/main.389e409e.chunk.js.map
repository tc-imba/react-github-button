{"version":3,"sources":["logo.svg","../../node_modules/tslib/tslib.es6.js","../../src/context.ts","../../src/ajaxGet.ts","../../src/GitHubButtonProvider.tsx","../../src/GitHubButton.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","assign","t","s","i","n","arguments","length","call","apply","GitHubButtonContext","React.createContext","namespace","name","followers","following","public_repos","public_gists","repo","stargazers","watchers","forks","url","callback","XDomainRequest","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","open","send","typeToGitHubKey","props","context","namespaceXhr","repoXhr","state","React.Component","getNamespaceRequestUrl","getRepoRequestUrl","updateState","ajaxGet","data","newState","console","log","setState","componentWillUnmount","abort","componentDidUpdate","prevProps","componentDidMount","render","React.createElement","Provider","value","children","defaultProps","typeToPath","typeToLabel","typeToButtonType","getButtonUrl","type","buttonType","getCountUrl","getCount","getCountStyle","display","getLabel","label","className","size","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","count","buttonClassName","classSet","buttonClassNameStr","keys","filter","key","join","rest","href","target","style","contextType","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.389e409e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as React from 'react';\r\n\r\ninterface GitHubButtonStateInterface {\r\n\r\n  namespace: {\r\n    name: string;\r\n    followers: number | null;\r\n    following: number | null;\r\n    public_repos: number | null;\r\n    public_gists: number | null;\r\n  };\r\n  repo: {\r\n    name: string;\r\n    stargazers: number | null;\r\n    watchers: number | null;\r\n    forks: number | null;\r\n  };\r\n}\r\n\r\nexport const defaultGitHubButtonState : GitHubButtonStateInterface = {\r\n  namespace: {\r\n    name: \"\",\r\n    followers: null,\r\n    following: null,\r\n    public_repos: null,\r\n    public_gists: null,\r\n  },\r\n  repo: {\r\n    name: \"\",\r\n    stargazers: null,\r\n    watchers: null,\r\n    forks: null,\r\n  },\r\n};\r\n\r\nexport const GitHubButtonContext = React.createContext(\r\n  defaultGitHubButtonState\r\n);\r\n","export default function ajaxGet(url: string, callback: any) {\r\n  // @ts-ignore\r\n  if (typeof XDomainRequest !== 'undefined') {\r\n    callback(null);\r\n    return null;\r\n  }\r\n\r\n  const xhr = new XMLHttpRequest();\r\n  xhr.onreadystatechange = () => {\r\n    if (xhr.readyState === XMLHttpRequest.DONE &&\r\n      xhr.status === 200) {\r\n      callback(JSON.parse(xhr.responseText));\r\n    }\r\n  };\r\n  xhr.open('GET', url, true);\r\n  xhr.send();\r\n  return xhr;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport {GitHubButtonContext} from './context';\r\nimport ajaxGet from './ajaxGet';\r\n\r\nconst typeToGitHubKey = {\r\n  stargazers: 'stargazers_count',\r\n  watchers: 'subscribers_count',\r\n  forks: 'forks_count',\r\n};\r\n\r\nexport interface GitHubButtonProviderProps {\r\n  namespace: string; // Your GitHub id or organization name.\r\n  repo?: string;     // The name of your repository.\r\n}\r\n\r\nexport interface GitHubButtonProviderState {\r\n  namespace: {\r\n    followers: number | null;\r\n    following: number | null;\r\n    public_repos: number | null;\r\n    public_gists: number | null;\r\n  },\r\n  repo: {\r\n    stargazers: number | null;\r\n    watchers: number | null;\r\n    forks: number | null;\r\n  }\r\n}\r\n\r\nexport default class GitHubButtonProvider extends React.Component<GitHubButtonProviderProps, GitHubButtonProviderState> {\r\n  namespaceXhr: any = null;\r\n  repoXhr: any = null;\r\n\r\n  static defaultProps = {\r\n    repo: \"\"\r\n  }\r\n\r\n  constructor(props: GitHubButtonProviderProps, context: any) {\r\n    super(props, context);\r\n    this.state = {\r\n      namespace: {\r\n        followers: null,\r\n        following: null,\r\n        public_repos: null,\r\n        public_gists: null,\r\n      },\r\n      repo: {\r\n        stargazers: null,\r\n        watchers: null,\r\n        forks: null,\r\n      },\r\n    };\r\n  }\r\n\r\n  getNamespaceRequestUrl() {\r\n    const {namespace} = this.props;\r\n    return `//api.github.com/users/${namespace}`;\r\n  }\r\n\r\n  getRepoRequestUrl() {\r\n    const {namespace, repo} = this.props;\r\n    return `//api.github.com/repos/${namespace}/${repo}`;\r\n  }\r\n\r\n  updateState() {\r\n    this.namespaceXhr = ajaxGet(this.getNamespaceRequestUrl(), (data:any) => {\r\n      if (!data) return;\r\n      let newState = this.state.namespace;\r\n      for (const t in this.state.namespace) {\r\n        if (data.hasOwnProperty(t)) {\r\n          newState[t] = data[t];\r\n        }\r\n      }\r\n      console.log('namespace:', newState);\r\n      this.setState({namespace: newState});\r\n    })\r\n\r\n    this.repoXhr = ajaxGet(this.getRepoRequestUrl(), (data: any) => {\r\n      if (!data) return;\r\n      let newState = this.state.repo;\r\n      for (const t in typeToGitHubKey) {\r\n        if (data.hasOwnProperty(typeToGitHubKey[t])) {\r\n          newState[t] = data[typeToGitHubKey[t]];\r\n        }\r\n      }\r\n      console.log('repo:', newState);\r\n      this.setState({repo: newState});\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.repoXhr) {\r\n      this.repoXhr.abort();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<GitHubButtonProviderProps>) {\r\n    if (this.props.namespace !== prevProps.namespace ||\r\n      this.props.repo !== prevProps.repo) {\r\n      this.updateState();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateState();\r\n  }\r\n\r\n  render() {\r\n    const state = {\r\n      namespace: {\r\n        name: this.props.namespace,\r\n        ...this.state.namespace,\r\n      },\r\n      repo: {\r\n        name: this.props.repo || \"\",\r\n        ...this.state.repo\r\n      }\r\n    };\r\n    return (\r\n      <GitHubButtonContext.Provider value={state}>\r\n        {this.props.children}\r\n      </GitHubButtonContext.Provider>\r\n    );\r\n  }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport {GitHubButtonContext} from './context';\r\n\r\nconst classNames = function(classSet: any) {\r\n  return Object.keys(classSet).filter((key) => classSet[key]).join(' ');\r\n};\r\n\r\nconst typeToPath = {\r\n  forks: 'network',\r\n  public_repos: '?tab=repositories',\r\n};\r\n\r\nconst typeToLabel = {\r\n  stargazers: 'Star',\r\n  watchers: 'Watch',\r\n  forks: 'Fork',\r\n  followers: 'Followers',\r\n  following: 'Following',\r\n  public_repos: 'Repos',\r\n  public_gists: 'Gists',\r\n};\r\n\r\nconst typeToButtonType = {\r\n  stargazers: 'repo',\r\n  watchers: 'repo',\r\n  forks: 'repo',\r\n  followers: 'namespace',\r\n  following: 'namespace',\r\n  public_repos: 'namespace',\r\n  public_gists: 'namespace',\r\n}\r\n\r\nexport interface GitHubButtonProps {\r\n  className?: string\r\n  type: 'stargazers' | 'watchers' | 'forks' | 'followers' | 'following' | 'public_repos' | 'public_gists';\r\n  size?: 'large';\r\n  label?: JSX.Element | string;\r\n}\r\n\r\nexport interface GitHubButtonState {\r\n}\r\n\r\nclass GitHubButton extends React.Component<GitHubButtonProps, GitHubButtonState> {\r\n  context: React.ContextType<typeof GitHubButtonContext>;\r\n\r\n  getButtonUrl() {\r\n    const {type} = this.props;\r\n    const buttonType = typeToButtonType[type];\r\n    const {namespace, repo} = this.context;\r\n    if (buttonType == 'repo') {\r\n      return `//github.com/${namespace.name}/${repo.name}`;\r\n    } else {\r\n      return `//github.com/${namespace.name}`;\r\n    }\r\n  }\r\n\r\n  getCountUrl() {\r\n    const {type} = this.props;\r\n    const buttonType = typeToButtonType[type];\r\n    const {namespace, repo} = this.context;\r\n\r\n    if (type=='public_gists') {\r\n      return `//gist.github.com/${namespace.name}/`;\r\n    } else if (buttonType == 'repo') {\r\n      return `//github.com/${namespace.name}/${repo.name}/${typeToPath[type] || type}`;\r\n    } else {\r\n      return `//github.com/${namespace.name}/${typeToPath[type] || type}`;\r\n    }\r\n  }\r\n\r\n  getCount() {\r\n    const {type} = this.props;\r\n    if (this.context.repo.hasOwnProperty(type) ) {\r\n      return this.context.repo[type];\r\n    }\r\n    if (this.context.namespace.hasOwnProperty(type)) {\r\n      return this.context.namespace[type];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCountStyle() {\r\n    const count = this.getCount();\r\n    if (count !== null) {\r\n      return {\r\n        display: 'block',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  getLabel() {\r\n    const {type, label} = this.props;\r\n    if (label) return label;\r\n    return typeToLabel[type];\r\n  }\r\n\r\n  render() {\r\n    const {className, type, size, label, ...rest} = this.props;\r\n    // delete rest.namespace;\r\n    // delete rest.repo;\r\n    const count = this.getCount();\r\n\r\n    // const count = this.state.count;\r\n\r\n    let buttonClassName = {\r\n      'github-btn': true,\r\n      'github-btn-large': size === 'large',\r\n      // [className]: className,\r\n    };\r\n    if (className) {\r\n      buttonClassName[className] = className;\r\n    }\r\n\r\n    const buttonClassNameStr = classNames(buttonClassName);\r\n\r\n    return (\r\n      <span {...rest} className={buttonClassNameStr}>\r\n        <a className=\"gh-btn\" href={this.getButtonUrl()} target=\"_blank\">\r\n          <span className=\"gh-ico\" aria-hidden=\"true\"></span>\r\n          <span className=\"gh-text\">{this.getLabel()}</span>\r\n        </a>\r\n        <a className=\"gh-count\" target=\"_blank\"\r\n           href={this.getCountUrl()}\r\n           style={this.getCountStyle()}\r\n        >\r\n          {count}\r\n        </a>\r\n      </span>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nGitHubButton.contextType = GitHubButtonContext;\r\n\r\nexport default GitHubButton;\r\n","import React from 'react';\r\n\r\nimport 'react-github-button/src/styles.css';\r\nimport {GitHubButton, GitHubButtonProvider} from 'react-github-button';\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const label = <div>\r\n    Follow @tc-imba\r\n  </div>;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n        <p>\r\n          tc-imba/react-github-button\r\n        </p>\r\n        <GitHubButtonProvider namespace=\"tc-imba\" repo=\"react-github-button\">\r\n          <div className=\"buttons\">\r\n            <GitHubButton size=\"large\" type=\"followers\" label={label} className=\"github-btn-long\"/>\r\n            <GitHubButton size=\"large\" type=\"following\"/>\r\n            <GitHubButton size=\"large\" type=\"public_repos\"/>\r\n            <GitHubButton size=\"large\" type=\"public_gists\"/>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <GitHubButton size=\"large\" type=\"stargazers\"/>\r\n            <GitHubButton size=\"large\" type=\"watchers\"/>\r\n            <GitHubButton size=\"large\" type=\"forks\"/>\r\n          </div>\r\n        </GitHubButtonProvider>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}